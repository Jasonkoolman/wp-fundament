{"version":3,"sources":["app.js","designer.js"],"names":["$","window","document","$window","$header","sticky","on","e","$btn","this","$input","siblings","value","val","direction","hasClass","trigger","preventDefault","click","$title","$item","parent","$content","next","toggleClass","slideToggle","body","documentElement","addClass","scroll","pageY","scrollTop","removeClass","ScrollReveal","reveal","delay","duration","scale","opacity","interval","cleanup","origin","distance","easing","viewFactor","jQuery","Point","x","y","_classCallCheck","concat","mid","a","b","Hex","q","r","s","Directions","add","neighbor","hex","dir","round","rX","Math","rY","rZ","xDiff","abs","yDiff","zDiff","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","pointy","sqrt","flat","Grid","svgRootElement","width","size","svg","tiles","viewport","x1","y1","x2","y2","orientation","tile","_this$tiles","Array","isArray","push","apply","_toConsumableArray","index","findIndex","t","splice","_this","setAttribute","forEach","draw","fill","drawNeighbors","bounds","getBoundaries","tileSize","getTileSize","minX","minY","height","maxX","maxY","viewBox","i","hasTile","honeycomb","Tile","addTile","some","h","M","p","pt","corner","angle","PI","cos","sin","corners","center","hexToPixel","offset","hexCornerOffset","update","position","getCanvasWidth","getCanvasHeight","offsetX","offsetY","console","log","min","getHexMin","max","getHexMax","tileWidth","total","tileHeight","key","start","arguments","length","undefined","reduce","v","rootElement","getElementById","getElementsByTagName","$config","find","grid","activeElement","data","clear","isTilt","$elem","tilt","destroy","call","reset","element","points","color","_init","elem","createElement","getElementsByClassName","appendChild","addEventListener","onClick","bind","hexCorners","_this2","childNodes","node","$shape","attr","event","css","top","left","fadeIn","touch","ns","group","createElementNS","polygon","img"],"mappings":"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","file":"app.min.js","sourcesContent":["(function($, window, document) {\r\n\r\n    initQuantityButtons();\r\n    initAccordion();\r\n\r\n    if ($(document.body).hasClass('template-template-home')) {\r\n        initStickyHeader();\r\n        initScrollReveal();\r\n    }\r\n\r\n    function initScrollReveal() {\r\n        ScrollReveal().reveal('.app-hero .col:first-child > *', {\r\n            delay: 400,\r\n            duration: 1400,\r\n            scale: 0.8,\r\n            opacity: 0,\r\n            interval: 200,\r\n            cleanup: true\r\n        });\r\n\r\n        ScrollReveal().reveal('.app-hero .col img', {\r\n            duration: 1400,\r\n            origin: 'right',\r\n            distance: '100px',\r\n            easing: 'cubic-bezier(0.4, 0.2, 0.2, 1)',\r\n            opacity: 0,\r\n            cleanup: true\r\n        });\r\n\r\n        ScrollReveal().reveal('.home-feature', {\r\n            duration: 1400,\r\n            distance: '80px',\r\n            opacity: 0,\r\n            interval: 200,\r\n            viewFactor: 0.5,\r\n            cleanup: true\r\n        });\r\n\r\n        ScrollReveal().reveal('.box-img', {\r\n            duration: 1400,\r\n            distance: '100px',\r\n            origin: 'right',\r\n            opacity: 0,\r\n            interval: 200,\r\n            viewFactor: 0.5,\r\n            cleanup: true\r\n        });\r\n    }\r\n\r\n    function initAccordion() {\r\n        $('.accordion-title').click(function() {\r\n            var $title = $(this);\r\n            var $item = $title.parent('.accordion-item');\r\n            var $content = $title.next('.accordion-content');\r\n\r\n            $item.toggleClass('active');\r\n            $content.slideToggle(300);\r\n        });\r\n    }\r\n\r\n    function initQuantityButtons() {\r\n        $('.woocommerce').on('click', '.qty-btn', function(e) {\r\n            var $btn = $(this);\r\n            var $input = $btn.siblings('input');\r\n            var value = $input.val();\r\n            var direction = $btn.hasClass('qty-down') ? 'Down' : 'Up';\r\n\r\n            $input[0]['step' + direction](); // invoke stepUp or stepDown\r\n\r\n            if (value !== $input.val()) {\r\n                $input.trigger('change'); // trigger change event only when the value has changed\r\n            }\r\n\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    function initStickyHeader() {\r\n        var $window = $(window);\r\n        var $header = $('.site-header');\r\n        var sticky = false;\r\n\r\n        $(document.documentElement).addClass('sh');\r\n\r\n        $window.scroll(function(e) {\r\n            var pageY = $window.scrollTop();\r\n\r\n            if (!sticky && pageY > 900) {\r\n                sticky = true;\r\n                $header.addClass('sticky');\r\n            } else if(sticky && pageY < 28) {\r\n                sticky = false;\r\n                $header.removeClass('sticky');\r\n            }\r\n        });\r\n    }\r\n\r\n})(jQuery, window, document);\r\n","class Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    toString() {\r\n        return `${this.x},${this.y}`;\r\n    }\r\n}\r\n\r\n/**\r\n * Retrieve the point in the middle of two points.\r\n *\r\n * @param {Point} a\r\n * @param {Point} b\r\n */\r\nPoint.mid = function(a, b) {\r\n    return new Point(\r\n        (a.x + b.x) / 2,\r\n        (a.y + b.y) / 2\r\n    );\r\n};\r\n\r\nclass Hex {\r\n    constructor(q, r) {\r\n        this.q = q;\r\n        this.r = r;\r\n        this.s = -q - r;\r\n    }\r\n}\r\n\r\n\r\nHex.Directions = [\r\n    new Hex(1, -1), new Hex(1, 0), new Hex(0, 1),\r\n    new Hex(-1, 1), new Hex(-1, 0), new Hex(0, -1)\r\n];\r\n\r\n/**\r\n * Sum up two hexes.\r\n *\r\n * @param {Hex} a\r\n * @param {Hex} b\r\n * @returns {Hex}\r\n */\r\nHex.add = function(a, b) {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n};\r\n\r\n/**\r\n * Get the neighboring hex.\r\n *\r\n * @param {Hex} hex\r\n * @param {number} dir\r\n * @returns {Hex}\r\n */\r\nHex.neighbor = function(hex, dir) {\r\n    const direction = Hex.Directions[dir];\r\n    return this.add(hex, direction);\r\n};\r\n\r\n/**\r\n * Round to the nearest hex position.\r\n *\r\n * @param {Hex} hex\r\n * @returns {Hex}\r\n */\r\nHex.round = function(hex) {\r\n    let rX = Math.round(hex.q);\r\n    let rY = Math.round(hex.r);\r\n    const rZ = Math.round(hex.s);\r\n\r\n    const xDiff = Math.abs(rX - hex.q);\r\n    const yDiff = Math.abs(rY - hex.r);\r\n    const zDiff = Math.abs(rZ - hex.s);\r\n\r\n    if (xDiff > yDiff && xDiff > zDiff) {\r\n        rX = -rY - rZ;\r\n    } else if (yDiff > zDiff) {\r\n        rY = -rX - rZ;\r\n    }\r\n\r\n    return new Hex(rX, rY);\r\n};\r\n\r\nclass Orientation {\r\n    constructor(f0, f1, f2, f3, b0, b1, b2, b3, start_angle) {\r\n        this.f0 = f0;\r\n        this.f1 = f1;\r\n        this.f2 = f2;\r\n        this.f3 = f3;\r\n        this.b0 = b0;\r\n        this.b1 = b1;\r\n        this.b2 = b2;\r\n        this.b3 = b3;\r\n        this.start_angle = start_angle;\r\n    }\r\n}\r\n\r\nOrientation.pointy = new Orientation(Math.sqrt(3.0), Math.sqrt(3.0) / 2.0, 0.0, 3.0 / 2.0, Math.sqrt(3.0) / 3.0, -1.0 / 3.0, 0.0, 2.0 / 3.0, 0.5);\r\nOrientation.flat = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0), 2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0, 0.0);\r\n\r\nclass Grid {\r\n\r\n    constructor(svgRootElement, width, size) {\r\n        this.svg = svgRootElement;\r\n        this.tiles = [];\r\n        this.size = size;\r\n        this.viewport = {x1: 0, y1: 0, x2: width, y2: width};\r\n        this.width = width;\r\n        this.origin = new Point(this.width / 2, this.width / 2);\r\n        this.orientation = Orientation.pointy;\r\n    }\r\n\r\n    addTile(tile) {\r\n        if (Array.isArray(tile)) {\r\n            this.tiles.push(...tile);\r\n        } else {\r\n            this.tiles.push(tile);\r\n        }\r\n    }\r\n\r\n    removeTile(hex) {\r\n        const index = this.tiles.findIndex(t =>\r\n            (t.hex.q === hex.q && t.hex.r === hex.r)\r\n        );\r\n\r\n        if (index) {\r\n            this.tiles.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.svg.setAttribute('width', this.width);\r\n        this.svg.setAttribute('viewBox', `${this.viewport.x1} ${this.viewport.y1} ${this.viewport.x2} ${this.viewport.y2}`);\r\n        this.tiles.forEach(tile => {\r\n            tile.draw();\r\n            tile.fill('#222');\r\n            this.drawNeighbors(tile);\r\n        });\r\n        // grid.updateWidth();\r\n\r\n    }\r\n\r\n    touch() {\r\n        const bounds = this.getBoundaries();\r\n        const tileSize = this.getTileSize();\r\n        // console.log();\r\n        this.viewport = {\r\n            x1: bounds.minX - (tileSize.width / 2),\r\n            y1: bounds.minY - (tileSize.height / 2),\r\n            x2: bounds.maxX + (tileSize.width / 2),\r\n            y2: bounds.maxY + (tileSize.height / 2)\r\n        };\r\n\r\n        const width = Math.abs(this.viewport.x1) + this.viewport.x2;\r\n        const height = Math.abs(this.viewport.y1) + this.viewport.y2;\r\n        const viewBox = `${this.viewport.x1} ${this.viewport.y1} ${width} ${height}`;\r\n\r\n        this.svg.setAttribute('width', width);\r\n        this.svg.setAttribute('viewBox', viewBox);\r\n    }\r\n\r\n    drawNeighbors(tile) {\r\n        for (let i = 0; i < 6; i++) {\r\n            const neighbor = Hex.neighbor(tile.hex, i);\r\n\r\n            if (!this.hasTile(neighbor)) {\r\n                const honeycomb = new Tile(neighbor, this);\r\n                honeycomb.draw();\r\n                this.addTile(honeycomb);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasTile(hex) {\r\n        return this.tiles.some(function (t) {\r\n            return t.hex.q === hex.q\r\n                && t.hex.r === hex.r;\r\n        });\r\n    }\r\n\r\n    hexToPixel(h) {\r\n        const M = this.orientation;\r\n        const size = this.size;\r\n        const origin = this.origin;\r\n        const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n        const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n\r\n        return new Point(x + origin.x, y + origin.y);\r\n    }\r\n    pixelToHex(p) {\r\n        const M = this.orientation;\r\n        const size = this.size;\r\n        const origin = this.origin;\r\n        const pt = new Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y);\r\n        const q = M.b0 * pt.x + M.b1 * pt.y;\r\n        const r = M.b2 * pt.x + M.b3 * pt.y;\r\n\r\n        return new Hex(q, r);\r\n    }\r\n    hexCornerOffset(corner) {\r\n        const M = this.orientation;\r\n        const size = this.size;\r\n        const angle = 2.0 * Math.PI * (M.start_angle - corner) / 6.0;\r\n        const x = size.x * Math.cos(angle);\r\n        const y = size.y * Math.sin(angle);\r\n\r\n        return new Point(x, y);\r\n    }\r\n    hexCorners(h) {\r\n        const corners = [];\r\n        const center = this.hexToPixel(h);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            const offset = this.hexCornerOffset(i);\r\n            const corner = new Point(center.x + offset.x, center.y + offset.y);\r\n            corners.push(corner);\r\n        }\r\n\r\n        return corners;\r\n    }\r\n\r\n    update() {\r\n        this.tiles.forEach(t => t.update());\r\n    }\r\n\r\n    updateWidth(position) {\r\n        const width = this.getCanvasWidth();\r\n        const height = this.getCanvasHeight();\r\n        this.viewport = {x1: 0, y1: 0, x2: width, y2: height};\r\n\r\n        // if (position.x > )\r\n        // console.log(position, this.origin);\r\n\r\n        if (this.origin === null) {\r\n            this.origin = new Point(width / 2, height / 2); // set origin to center\r\n        } else {\r\n            const offsetX = position.x - this.origin.x;\r\n            const offsetY = position.y - this.origin.y;\r\n            console.log(offsetX, offsetY);\r\n            // this.origin = new Point(width / 2, height / 2); // shift origin\r\n            if (offsetX < 0) {\r\n                this.viewport = {x1: offsetX, y1: offsetY, x2: this.viewport.x2, y2: this.viewport.y2};\r\n            } else {\r\n                this.viewport = {x1: this.viewport.x1, y1: this.viewport.y1, x2: this.viewport.x2, y2: this.viewport.y2};\r\n            }\r\n            console.log(this.origin);\r\n        }\r\n\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        // if (this.origin.x)\r\n\r\n        this.svg.setAttribute('width', this.width);\r\n        this.svg.setAttribute('viewBox', `${this.viewport.x1} ${this.viewport.y1} ${this.viewport.x2} ${this.viewport.y2}`);\r\n\r\n        this.update();\r\n    }\r\n\r\n    getBoundaries() {\r\n        let minX = 0, minY = 0, maxX = 0, maxY = 0;\r\n\r\n        this.tiles.forEach(t => {\r\n            const p = t.center;\r\n\r\n            if (!p) return;\r\n\r\n            if (p.x <= minX) {\r\n                minX = p.x;\r\n            } else if (p.x > maxX) {\r\n                maxX = p.x;\r\n            }\r\n\r\n            if (p.y <= minY) {\r\n                minY = p.y;\r\n            } else if (p.y > maxY) {\r\n                maxY = p.y;\r\n            }\r\n        });\r\n\r\n        return { minX, minY, maxX, maxY };\r\n    }\r\n\r\n    getCanvasWidth() {\r\n        const tileSize = this.getTileSize();\r\n        const min = this.getHexMin('q');\r\n        const max = this.getHexMax('q');\r\n\r\n        let tileWidth = tileSize.width;\r\n        let total = 0;\r\n\r\n        for (let i = min; i <= max; i++) {\r\n            total += tileWidth;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    getCanvasHeight() {\r\n        const tileSize = this.getTileSize();\r\n        const min = this.getHexMin('r');\r\n        const max = this.getHexMax('r');\r\n\r\n        let tileHeight = tileSize.height;\r\n        let total = 0;\r\n\r\n        for (let i = min; i <= max; i++) {\r\n            total += tileHeight;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    getHexMin(key, start = 0) {\r\n        return this.tiles.reduce((min, t) => t.hex[key] < min ? t.hex[key] : min, start);\r\n    }\r\n\r\n    getHexMax(key, start = 0) {\r\n        return this.tiles.reduce((max, t) => t.hex[key] > max ? t.hex[key] : max, start);\r\n    }\r\n\r\n    getTileSize() {\r\n        let height, width, v, h;\r\n\r\n        // if () {\r\n        height = (this.orientation === Orientation.flat ? this.size.x : this.size.y) * 2;\r\n        width = Math.sqrt(3) / 2 * height;\r\n        v = height * 0.75;\r\n        h = width;\r\n        // } else {\r\n        //     width = this.size * 2;\r\n        //     height = Math.sqrt(3) / 2 * width;\r\n        //     v = width;\r\n        //     h = height * 0.75;\r\n        // }\r\n\r\n        return { width, height, v, h };\r\n    }\r\n\r\n}\r\n\r\nconst rootElement = document.getElementById('designer');\r\nconst svgRootElement = rootElement.getElementsByTagName('svg')[0];\r\n\r\nconst $config = $(rootElement).find('.tile-config');\r\n\r\nconst grid = new Grid(svgRootElement, 188, new Point(36, 36));\r\nlet activeElement = null;\r\n\r\n$('.colors li').click(function(e) {\r\n    const hex = $(this).data('hex');\r\n    activeElement.fill(hex);\r\n});\r\n\r\n$('#tile-delete-btn').click(function(e) {\r\n    activeElement.clear();\r\n});\r\n\r\nlet isTilt = false;\r\n$('#3d').click((e) => {\r\n    const $elem = $('.tile-grid');\r\n    if (isTilt) {\r\n        $elem.tilt.destroy.call($elem);\r\n        isTilt = false;\r\n    } else {\r\n        $elem.tilt({\r\n            reset: false\r\n        });\r\n        isTilt = true;\r\n    }\r\n\r\n});\r\n\r\n$('#relaxed').click((e) => {\r\n    $(svgRootElement).toggleClass('tiles--relaxed')\r\n});\r\n\r\n$('#orientation').click((e) => {\r\n    grid.orientation = (grid.orientation === Orientation.pointy)\r\n        ? Orientation.flat\r\n        : Orientation.pointy;\r\n    grid.update();\r\n});\r\n\r\n\r\nclass Tile {\r\n\r\n    constructor(hex, grid) {\r\n        this.hex = hex;\r\n        this.grid = grid;\r\n        this.element = null;\r\n        this.center = null;\r\n        this.points = [];\r\n        this.color = null;\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n        const elem = Tile.createElement();\r\n        this.update();\r\n        this.element = this.grid.svg.getElementsByClassName('tiles')[0].appendChild(elem);\r\n        this.element.addEventListener('click', this.onClick.bind(this));\r\n    }\r\n\r\n    update() {\r\n        this.center = this.grid.hexToPixel(this.hex);\r\n        this.points = this.grid.hexCorners(this.hex);\r\n    }\r\n\r\n    draw() {\r\n        this.element.setAttribute('transform-origin', `${this.center.x}px ${this.center.y}px`);\r\n        this.element.childNodes.forEach(node => {\r\n            node.setAttribute('points', this.points);\r\n        });\r\n    }\r\n\r\n    fill(hex) {\r\n        const $elem = $(this.element);\r\n        const $shape = $elem.find('.tile-shape');\r\n        $elem.removeClass('tile--clear');\r\n        $elem.addClass('tile--fill');\r\n        $shape.attr('fill', hex);\r\n        $shape.attr('stroke', hex);\r\n        this.color = hex;\r\n    }\r\n\r\n    clear() {\r\n        const $elem = $(this.element);\r\n        $elem.removeClass('tile--fill');\r\n        $elem.addClass('tile--clear');\r\n        this.color = null;\r\n    }\r\n\r\n    onClick(event) {\r\n        activeElement = this;\r\n\r\n        if (this.color) {\r\n            $config.css({\r\n                top: `${this.center.y}px`,\r\n                left: `${this.center.x}px`\r\n            }).fadeIn();\r\n        } else {\r\n            this.fill('#222');\r\n            for (let i = 0; i < 6; i++) {\r\n                this.grid.drawNeighbors(this);\r\n            }\r\n        }\r\n\r\n        this.grid.touch();\r\n        // this.grid.updateWidth(this.center);\r\n    }\r\n\r\n}\r\n\r\nTile.createElement = function() {\r\n    const ns = 'http://www.w3.org/2000/svg';\r\n    const group = document.createElementNS(ns, 'g');\r\n    const polygon = document.createElementNS(ns, 'polygon');\r\n    const img = document.createElementNS(ns, 'polygon');\r\n    group.setAttribute('class', 'tile tile--clear');\r\n    group.appendChild(polygon);\r\n    group.appendChild(img);\r\n    polygon.setAttribute('class', 'tile-shape');\r\n    img.setAttribute('class', 'tile-img');\r\n    return group;\r\n};\r\n\r\ngrid.addTile([\r\n    new Tile(new Hex(0, 0), grid),\r\n]);\r\n\r\ngrid.draw();\r\n"]}